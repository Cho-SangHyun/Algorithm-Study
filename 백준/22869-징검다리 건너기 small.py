# 22869 - 징검다리 건너기
# 왼쪽 돌부터 시작해 오른쪽 돌로만 이동가능하며,
# i번째돌에서 j번째 돌로 갈 때는 정해진 공식에 의한 힘이 들며, 그 힘이 k보다 같거나 작으면 이동 가능한 것임
# 결론적으로 첫 번째 돌에서 끝 돌로 갈 수 있는가?

# 1. 무식한 접근
# n번째 돌로 갈 수 있는 모든 방법 파악해서 하나라도 되는 게 있는지 본다
# 2^n개의 방법에 대해 조사해야 하는데 n이 최대 5,000이므로 당연히 시간초과

# 2. 부분문제로 쪼갤 수 있는지?
# 1번째 돌에서 시작해 N번째 돌까지 오는 경우 =
# N - 1번째 돌까지 온 다음 점프해서 오는 경우
# N - 2번째 돌까지 온 다음 점프해서 오는 경우
# N - 3번째 돌까지 온 다음 점프해서 오는 경우
# ...
# 1번째 돌에서 점프해서 오는 경우

# 로 쪼갤 수 있다

# 3. 중복되는 케이스 있는지?
# N - 1번째 돌까지 오는 경우 =
# N - 2번째 돌까지 온 다음 점프해서 오는 경우
# N - 3번째 돌까지 온 다음 점프해서 오는 경우
# ...
# 1번째 돌에서 점프해서 오는 경우
# 등으로 쪼개지며 중복되는 것을 쉽게 확인가능

# 즉, 전형적인 DP문제다

import sys

N, K = map(int, sys.stdin.readline().split())

data = [0] + list(map(int, sys.stdin.readline().split()))

def energy(i, j):
    return (j - i) * (1 + abs(data[i] - data[j]))

dp = [0 for _ in range(5003)]
dp[1] = 1

for j in range(2, N + 1):
    for i in range(1, j):
        if dp[i] and energy(i, j) <= K:
            dp[j] = 1
            break

print("YES" if dp[N] else "NO")